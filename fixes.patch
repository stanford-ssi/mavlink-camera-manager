commit 83eeab6129332d46b8dc914fc7c52bf900024b57
Author: togo <togo@togo.stanfordssi.org>
Date:   Sat May 25 20:36:32 2024 -0700

    updated some files for compilation

diff --git a/Cargo.toml b/Cargo.toml
index 1497245..29a9f04 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -82,13 +82,14 @@ turn = "0.7"
 image = "0.24"
 
 ## GSTREAMER
-gst = { package = "gstreamer", version = "0.22", features = ["v1_16"] }
-gst-app = { package = "gstreamer-app", version = "0.22", features = ["v1_16"] }
-gst-sdp = { package = "gstreamer-sdp", version = "0.22", features=["v1_16"] }
-gst-webrtc = { package = "gstreamer-webrtc", version = "0.22", features = ["v1_16"] }
-gst-rtsp = { package = "gstreamer-rtsp", version = "0.22", features = ["v1_16"] }
-gst-rtsp-server = { package = "gstreamer-rtsp-server", version = "0.22", features = ["v1_16"] }
-gst-video = { package = "gstreamer-video", version = "0.22", features = ["v1_16"] }
+# gst = { package = "gstreamer", version = "0.22", features = ["v1_14"] }
+gst = { package = "gstreamer", version = "0.22", features = [] }
+gst-app = { package = "gstreamer-app", version = "0.22", features = [] }
+gst-sdp = { package = "gstreamer-sdp", version = "0.22", features=[] }
+gst-webrtc = { package = "gstreamer-webrtc", version = "0.22", features = [] }
+gst-rtsp = { package = "gstreamer-rtsp", version = "0.22", features = [] }
+gst-rtsp-server = { package = "gstreamer-rtsp-server", version = "0.22", features = [] }
+gst-video = { package = "gstreamer-video", version = "0.22", features = [] }
 webrtc-sdp = "0.3.11"
 
 [dev-dependencies]
diff --git a/src/stream/pipeline/v4l_pipeline.rs b/src/stream/pipeline/v4l_pipeline.rs
index 68b52c5..57ac17c 100644
--- a/src/stream/pipeline/v4l_pipeline.rs
+++ b/src/stream/pipeline/v4l_pipeline.rs
@@ -60,7 +60,8 @@ impl V4lPipeline {
                         " ! h264parse",  // Here we need the parse to help the stream-format and alignment part, which is being fixed here because avc/au seems to reduce the CPU usage in the RTP payloading part.
                         " ! capsfilter name={filter_name} caps=video/x-h264,stream-format=avc,alignment=au,width={width},height={height},framerate={interval_denominator}/{interval_numerator}",
                         " ! tee name={video_tee_name} allow-not-linked=true",
-                        " ! rtph264pay aggregate-mode=zero-latency config-interval=10 pt=96",
+                        " ! rtph264pay config-interval=10 pt=96",
+// aggregate-mode=zero-latency 
                         " ! tee name={rtp_tee_name} allow-not-linked=true"
                     ),
                     device = device,
diff --git a/src/stream/rtsp/rtsp_server.rs b/src/stream/rtsp/rtsp_server.rs
index 688edd0..f5bb392 100644
--- a/src/stream/rtsp/rtsp_server.rs
+++ b/src/stream/rtsp/rtsp_server.rs
@@ -169,7 +169,8 @@ impl RTSPServer {
                         " ! queue leaky=downstream flush-on-eos=true silent=true max-size-buffers=0",
                         " ! capsfilter caps={rtp_caps:?}",
                         " ! rtph264depay",
-                        " ! rtph264pay name=pay0 aggregate-mode=zero-latency config-interval=10 pt=96",
+                        " ! rtph264pay name=pay0 config-interval=10 pt=96",
+// aggregate-mode=zero-latency 
                     ),
                     socket_path = socket_path,
                     rtp_caps = rtp_caps,
diff --git a/src/stream/sink/webrtc_sink.rs b/src/stream/sink/webrtc_sink.rs
index 706add9..6e39a3c 100644
--- a/src/stream/sink/webrtc_sink.rs
+++ b/src/stream/sink/webrtc_sink.rs
@@ -46,7 +46,7 @@ impl SinkInterface for WebRTCSink {
             gst_webrtc::WebRTCRTPTransceiverDirection::Sendonly,
         );
         transceiver.set_property("do-nack", false);
-        transceiver.set_property("fec-type", gst_webrtc::WebRTCFECType::None);
+        // transceiver.set_property("fec-type", gst_webrtc::WebRTCFECType::None);
 
         // Link
         let sink_id = &self.get_id();
@@ -311,7 +311,7 @@ impl WebRTCSink {
                 gst::ElementFactory::make("webrtcbin")
                     .property_from_str("name", format!("webrtcbin-{}", bind.session_id).as_str())
                     .property("async-handling", true)
-                    .property("bundle-policy", gst_webrtc::WebRTCBundlePolicy::MaxBundle) // https://webrtcstandards.info/sdp-bundle/
+                    // .property("bundle-policy", gst_webrtc::WebRTCBundlePolicy::MaxBundle) // https://webrtcstandards.info/sdp-bundle/
                     .property("latency", 0u32)
                     .property_from_str("stun-server", cli::manager::stun_server_address().as_str())
                     .property_from_str("turn-server", DEFAULT_TURN_ENDPOINT)
